@model IEnumerable<Transaction>

@{
    ViewData["Title"] = "Personal Finance";
}
<style>
    .button {
        border: none;
        color: white;
        padding: 16px 32px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        margin: 4px 2px;
        transition-duration: 0.4s;
        cursor: pointer;
    }

    .addButton {
        background-color: white;
        color: black;
        border: 2px solid #04AA6D;
    }

        .addButton:hover {
        background-color: #04AA6D;
        color: white;
    }
</style>
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.7.1.slim.min.js" integrity="sha256-kmHvs0B+OpCW5GVHUNjv9rOmY0IvSIRcf7zGUDTDQM8=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

</head>
<body>
   <div class="text-center">
        <h1 class="display-4">Welcome To MVC.Budget!</h1>
        <p>This is a personal finance app built in Visual Studio with C# / .Net and MVC structure. The front end is done in Razor Pages.</p>
    </div>
    <div style="padding-top: 100px">
        <button type="button" class="button addButton" data-bs-toggle="modal" data-bs-target="#myModal">
            Add
        </button>
    </div>
    
    <div>
        <table class="table table-bordered table-responsive table-hover">
            <tr>
                <th>Name</th>
                <th>Category</th>
                <th>Amount</th>
                <th>Date</th>
            </tr>
            @foreach (var t in Model)
            {
                <tr>
                    <td>@t.Name</td>
                    <td>@t.Category</td>
                    <td>@t.Amount</td>
                    <td>@t.Date</td>
                </tr>
            }
        </table>
    </div>
    <div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-bs-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Add new transaction</h4>
                </div>
                <form>
                    <div class="form-group">
                        <label for="recipient-name" class="col-form-label">Recipient:</label>
                        <input type="text" class="form-control" id="recipient-name">
                    </div>
                    <div class="form-group">
                        <label for="message-text" class="col-form-label">Message:</label>
                        <textarea class="form-control" id="message-text"></textarea>
                    </div>
                </form>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-bs-dismiss="modal">Close</button>
                </div>
            </div>

        </div>
    </div>
</body>

<script type="text/javascript">
    $('#myModal').on('show.bs.modal', function (event){
        window.alert("hej!")
        var button = $(event.relatedTarget) // Button that triggered the modal
        var recipient = button.data('whatever') // Extract info from data-* attributes
        // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
        // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
        var modal = $(this)
        modal.find('.modal-title').text('New message to ' + recipient)
        modal.find('.modal-body input').val(recipient)
    })


</script>


